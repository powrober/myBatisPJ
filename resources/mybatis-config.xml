<?xml version="1.0" encoding="UTF-8"?>
<!-- XML 문서의 유효성 체크를 위해서 필요한 부분 -->
<!DOCTYPE configuration PUBLIC 
 "-//mybatis.org//DTD Config 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-config.dtd" >
<configuration>
	<!-- 
		* Configuration
		    마이바티스 설정과 관련된 기본 셋팅들을 선언할 수 있는 영역
		  configuration 내부에서 작성되는 element들도 순서가있다.
	 -->
	 
	 <!-- driver.properties 적용 -->
	 <properties resource="/driver.properties"/>
	 
	 <!-- 마이바티스 설정과 기본 셋팅 선언 -->
	 <settings>
	 	  <!-- 만약에 null로 데이터가 전달되었다면 빈칸이 아닌 null로 인식해라 라는 뜻 -->
	 	  <!-- value에 null은 반드시 대문자로!  -->
	      <setting name="jdbcTypeForNull" value="NULL"/>
	 </settings>
	 
	 <!-- VO/DTO 객체의 풀네임을 일반 클래스명으로 사용하기 위해 별칭을 등록 -->
	 <!-- Why? VO객체들의 풀 네임을 매번 사용하기 번거롭기 때문에 별칭을 등록해서 사용한다. -->
	 <typeAliases>
	 	<typeAlias type="com.ict.member.model.vo.Member" alias="Member"/>
	 	<typeAlias type="com.ict.board.model.vo.Board" alias="Board"/>
	 	<typeAlias type="com.ict.board.model.vo.Reply" alias="Reply"/>
	 </typeAliases>
	 
	 <!-- DB 연결할 설정에 대한 정보를 선언하는 부분 -->
	 <!-- default : 연결설정을 여러개 생성하여 아이디로 구분하고 기본으로 연결할 설정 정보를 설정하는 속성 -->
	 <environments default="development">
	 	<environment id="development">
	 		<!-- 마이바티스의 핵심이 되는 설정은 트랜잭션을 제어하기 위한 TransactionManager와 함계
	 		          데이터베이스 Connection 인스턴스를 가져오기위한 DataSource를 포함하고있다.
	 		          
	 		     transactionManager -> JDBC와 MANAGED 둘중 하나를 선택할 수 있다.
	 		     - JDBC    : JDBC가 commit과 rollback의 기능을 직접 사용하게 하는 옵션(수동 commit)
	 		                                    트랜잭션의 스코프를 관리하기위해서 dataSource로 부터 connect를 가져온다.
	 		     - MANAGED : 트랜잭션에 대해 어떠한 영향도 행사하지 않는다는 옵션(자동 commit)
	 		                                    컨테이너가 트랜잭션의 모든 생명주기를 관리한다. 디폴트로 connect를 닫아준다. 
	 		 -->
	 		<transactionManager type="JDBC"/>
	 		
	 		<!-- 실제 DB접속에 관한 정보를 넣는 태그 
	 		     type속성은 ConnectionPool을 사용할 건지에대한 여부
	 		     POOLED와 UNPOOLED를 사용할 수 있다.
	 		 -->
	 		<dataSource type="POOLED">
	 			<!-- 연결에 필요한 정보들을 property로 등록 -->
	 			<!-- name은 key에 해당하고, value가 value에 해당한다. -->
	 			<!-- 1. driver,url,username,password 정보들을 여기에 직접 작성 -->
	 			<property name="driver" value="oracle.jdbc.driver.OracleDriver"/>
	 			<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
	 			<property name="username" value="mybatis"/>
	 			<property name="password" value="mybatis"/>
	 			<!-- 2. driver.properties 파일로 연결하기 -->
	 		</dataSource>
	 	</environment>
	 	
	 </environments>
	 
	 <!-- DB에 사용되는 쿼리문들을 담은 mapper 파일들을 등록하는 부분 -->
	 <mappers>
	 	<mapper resource="/mappers/member-mapper.xml"/>
	 	<mapper resource="/mappers/board-mapper.xml"/>
	 </mappers>
</configuration>







